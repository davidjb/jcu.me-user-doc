[buildout]
parts = 
    sphinxbuilder
    toplone

index = http://eresearch.jcu.edu.au/pypi

extends =
    http://dist.plone.org/release/4.1-latest/versions.cfg

[sources]
transmogrify.webcrawler = git git://github.com/djay/transmogrify.webcrawler.git
#transmogrify.webcrawler = git git://github.com/miohtama/transmogrify.webcrawler.git

transmogrify.pathsorter = git git://github.com/djay/transmogrify.pathsorter.git
transmogrify.htmltesting = git git://github.com/djay/transmogrify.htmltesting.git

transmogrify.siteanalyser = git git://github.com/djay/transmogrify.siteanalyser.git
#transmogrify.siteanalyser = git git://github.com/miohtama/transmogrify.siteanalyser.git 

transmogrify.htmltesting = git git://github.com/djay/transmogrify.htmltesting.git
#transmogrify.htmltesting = git git://github.com/miohtama/transmogrify.htmltesting.git

# Following have been patched

transmogrify.ploneremote = git git://github.com/djay/transmogrify.ploneremote.git
#transmogrify.ploneremote =  git git://github.com/miohtama/transmogrify.ploneremote.git

transmogrify.htmlcontentextractor = git git://github.com/djay/transmogrify.htmlcontentextractor.git
#transmogrify.htmlcontentextractor = git git://github.com/miohtama/transmogrify.htmlcontentextractor.git

funnelweb = git git://github.com/collective/funnelweb.git
mr.migrator = git git@github.com:collective/mr.migrator.git



[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/source
build = ${buildout:directory}/build

[toplone]
recipe = funnelweb
crawler-url=file://${buildout:directory}/build/html
crawler-ignore=
    cgi-bin
    javascript:
    _static
    _sources
    genindex\.html
    search\.html
    saesrchindex\.js
# Since content is from disk, no need for local cache
cache-output =

# Fields with '_' won't be uploaded to Plone so will be effectively removed 
template1-title = text //div[@class='body']//h1[1]
template1-_permalink = text //div[@class='body']//a[@class='headerlink']
template1-text = html //div[@class='body']
template1-_label = optional //p[contains(@class,'admonition-title')]
template1-description = optional //div[contains(@class,'admonition-description')]/p[@class='last']/text()
template1-_remove_useless_links = optional //div[@id = 'indices-and-tables']
templateauto-condition = python:False

#attachmentguess-condition = python: subitem.get('_type') in ['Image']
#attachmentguess-defaultpage = index

# Images will get titles from backlink text
titleguess-condition = python:True
indexguess-condition = python:True

# Hide the images folder from navigation
hideguess-condition = python:item.get("_path","").startswith('_images') and item.get('_type')=='Folder'

# Upload as PHC instead of Folders and Pages 
changetype-value=python:{'Folder':'HelpCenterReferenceManualSection','Document':'HelpCenterLeafPage'}.get(item['_type'],item['_type'])

# Save locally for debugging purposes
# WARNING: not currently working
#localupload-output=${buildout:directory}/ploneout

# All folderish content should be checked if they contain
# any items on the remote site which are not presented locally. including base folder
ploneprune-condition=python:item.get('_type') in ['HelpCenterReferenceManualSection','HelpCenterReferenceManual'] or item['_path'] == ''


